---
apiVersion: v1
kind: Namespace
metadata:
  name: uppi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: uppi-env
  namespace: uppi
data:
  APP_NAME: "Uppi"
  APP_ENV: "production"
  APP_DEBUG: "false"
  APP_URL: "https://uppi.dev"
  
  LOG_CHANNEL: "stack"
  LOG_LEVEL: "info"
  
  DB_CONNECTION: "mysql"
  DB_HOST: "mysql"
  DB_PORT: "3306"
  DB_DATABASE: "uppi"
  
  BROADCAST_DRIVER: "redis"
  CACHE_DRIVER: "redis"
  FILESYSTEM_DISK: "local"
  QUEUE_CONNECTION: "redis"
  SESSION_DRIVER: "redis"
  SESSION_LIFETIME: "120"
  
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  
  MAIL_MAILER: "smtp"
  MAIL_HOST: "smtp.mailgun.org"
  MAIL_PORT: "587"
  MAIL_ENCRYPTION: "tls"
  
  AWS_DEFAULT_REGION: "eu-west-1"
  AWS_USE_PATH_STYLE_ENDPOINT: "false"
  
  PUSHER_APP_CLUSTER: "mt1"
  
  VITE_APP_NAME: "Uppi"
  VITE_PUSHER_APP_CLUSTER: "${PUSHER_APP_CLUSTER}"
---
apiVersion: v1
kind: Secret
metadata:
  name: uppi-secrets
  namespace: uppi
type: Opaque
stringData:
  # Application
  APP_KEY: "base64:your-32-char-key"
  
  # Database
  DB_USERNAME: "database-username"
  DB_PASSWORD: "database-password"
  
  # Mail
  MAIL_USERNAME: "mailgun-username"
  MAIL_PASSWORD: "mailgun-password"
  MAIL_FROM_ADDRESS: "no-reply@uppi.dev"
  MAILGUN_DOMAIN: "mail.uppi.dev"
  MAILGUN_SECRET: "your-mailgun-secret"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: uppi
spec:
  replicas: 2
  selector:
    matchLabels:
      app: uppi
  template:
    metadata:
      labels:
        app: uppi
    spec:
      containers:
      - name: app
        image: ghcr.io/janyksteenbeek/uppi:main
        ports:
        - containerPort: 8888
        envFrom:
        - configMapRef:
            name: uppi-env
        - secretRef:
            name: uppi-secrets
        env:
        - name: REDIS_HOST
          value: redis
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: uppi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uppi-worker
  template:
    metadata:
      labels:
        app: uppi-worker
    spec:
      containers:
      - name: worker
        image: ghcr.io/janyksteenbeek/uppi:main
        command: ["php", "artisan", "horizon"]
        envFrom:
        - configMapRef:
            name: uppi-env
        - secretRef:
            name: uppi-secrets
        env:
        - name: REDIS_HOST
          value: redis
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "1024Mi"
            cpu: "200m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: uppi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: uppi
spec:
  selector:
    app: uppi
  ports:
  - port: 80
    targetPort: 8888
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: uppi
spec:
  selector:
    app: redis
  ports:
  - port: 6379
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uppi-website
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - uppi.dev
    - www.uppi.dev
    secretName: uppi-dev-tls
  rules:
  - host: uppi.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: uppi-website
            port:
              name: http
